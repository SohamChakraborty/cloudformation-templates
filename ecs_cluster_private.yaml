AWSTemplateFormatVersion: '2010-09-09'
Description: EC2 ECS cluster running containers in a private subnet. Inspired
             by https://github.com/nathanpeck/ecs-cloudformation/blob/master/cluster/cluster-ec2-private-vpc.yml
Parameters:
  ClusterName:
    Type: String
    Default: logstash-ecs-cluster
    Description: "A friendly clustername that will be used for namespacing all cluster resources."
  EnvironmentName:
    Type: String
    Default: dev 
    Description: "In which environment this resource resides? production/qa/staging/dev"
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: m5.xlarge
    Description: "Class of EC2 instance used to host containers. Choose t2 for testing, m5 for general purpose, c5 for CPU intensive services, and r5 for memory intensive services"
    AllowedValues: [ t2.micro, t2.small, t2.medium, t2.large, t2.xlarge, t2.2xlarge,
     m5.large, m5.xlarge, m5.2large, m5.4xlarge, m5.12xlarge, m5.24large,
     c5.large, c5.xlarge, c5.2xlarge, c5.4xlarge, c5.9xlarge, c5.18xlarge,
     r5.large, r5.xlarge, r5.2xlarge, r5.4xlarge, r5.12xlarge, r5.24xlarge ]
    ConstraintDescription: Please choose a valid instance type.
  DesiredCapacity:
    Type: Number
    Default: '3'
    Description: "Number of EC2 instances to launch in your ECS cluster."
  MaxSize:
    Type: Number
    Default: '6'
    Description: "Maximum number of EC2 instances that can be launched in your ECS cluster."
  ECSAMI:
    Description: AMI ID
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ecs/optimized-ami/amazon-linux/recommended/image_id
    Description: "The Amazon Machine Image ID used for the cluster, leave it as the default value to get the latest AMI"
  VPCID:
    Description: "In which VPC the service will reside"
    Type: List<AWS::EC2::VPC::Id> # Might be better to parameterize in AWS SSM
    #    Type: AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id> # Might be better to parameterize in AWS SSM. Commenting because
    #          dropdown looks good to me.
  SubnetGroups:
    Description: "In which Subnet Groups the cluster instances will reside - pick from drop down"
    Type: List<AWS::EC2::Subnet::Id> # Might be better to parameterize in AWS SSM
  EC2SecurityGroups:
    Description: "List of SecurityGroups, we are specifying three security groups as per the current security groups that are attached to the ECS instances - pick from drop down"
    Type: List<AWS::EC2::SecurityGroup::GroupName> # Might be better to parameterize in AWS SSM 
Resources:
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref ClusterName
      Tags:
        - Key: purpose
          Value: testing
        - Key: environment
          Value: dev
  ECSAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: logstash-ecs-asg
      LaunchConfigurationName: !Ref ContainerInstanceLaunchConfiguration
      VPCZoneIdentifier: !Ref SubnetGroups
      MaxSize: !Ref MaxSize
      MinSize: 1
      DesiredCapacity: !Ref DesiredCapacity
      HealthCheckGracePeriod: 300
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: true
    CreationPolicy:
      ResourceSignal: 
        Count: 2
        Timeout: PT5M
  ContainerInstanceLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref ECSAMI
      IamInstanceProfile: 'ecsInstanceRole' #This is taken from existing EC2 Instanceprofile that is attached to the ECS EC2 instances
      InstanceType: !Ref InstanceType
      SecurityGroups: !Ref EC2SecurityGroups
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          echo ECS_CLUSTER=${ECSCluster} >> /etc/ecs/ecs.config
          yum install -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource ECSAutoScalingGroup --region ${AWS::Region}
Outputs:
  ClusterName:
    Description: The name of the ECS cluster
    Value: !Ref 'ECSCluster'
    Export:
      Name: !Sub ${EnvironmentName}:ClusterName
